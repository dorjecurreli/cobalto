name: Cobalto Pipeline

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-prod'

jobs:

  build_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set env release
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set env slug
        run: echo "REPO_SLUG=cobalto" >> $GITHUB_ENV
#      - uses: docker/setup-qemu-action@v2
      - name: Login into registry
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo ${DOCKERHUB_TOKEN} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Setup symfony env
        run: echo "${{ secrets.SYMFONY_ENV }}" | base64 --decode > ./app/.env.local

      - name: Build and Publish Image
        env:
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
        run: bash build_all.sh ${DOCKERHUB_NAMESPACE}/${REPO_SLUG} ${RELEASE_VERSION}

#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@0.20.0
#        with:
#          image-ref: '${{ secrets.DOCKERHUB_NAMESPACE }}/cobalto:v0.0.13'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL,HIGH'



  deploy-prod:
    runs-on: ubuntu-latest
    needs: build_publish
    if: ${{ endsWith(github.ref, '-prod') }}
    steps:
      - uses: actions/checkout@v4
      - name: Set env release
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set env slug
        run: echo "REPO_SLUG=cobalto" >> $GITHUB_ENV
      - name: Setup docker compose env
        run: echo "${{ secrets.DOCKER_COMPOSE_ENV_PROD }}" | base64 --decode > deployment/.env.production
      - uses: burnett01/rsync-deployments@5.2
        name: Pre Deploy
        env:
          SSH_HOST: ${{ vars.SSH_HOST }}
          SSH_REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PORT: ${{ vars.SSH_PORT }}
          COMMON_BASE_PATH: ${{ vars.COMMON_BASE_PATH }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
        with:
          switches: -ravP --exclude=".git*" --exclude="readme.md" --exclude="src"
          path: deployment/
          remote_path: /home/cobalto/cobalto
          remote_host: ${{ vars.SSH_HOST }}
          remote_port: ${{ vars.SSH_PORT }}
          remote_user: ${{ secrets.SSH_REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - uses: appleboy/ssh-action@v1.0.0
        name: Deploy IaC
        env:
          SSH_HOST: ${{ vars.SSH_HOST }}
          SSH_REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PORT: ${{ vars.SSH_PORT }}
          COMMON_BASE_PATH: ${{ vars.COMMON_BASE_PATH }}
          DOCKERHUB_NAMESPACE: ${{ secrets.DOCKERHUB_NAMESPACE }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ secrets.SSH_REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT }}
          envs: RELEASE_VERSION,REPO_SLUG,COMMON_BASE_PATH,DOCKERHUB_NAMESPACE
          script_stop: true
          script: |
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            cd ${COMMON_BASE_PATH}/${REPO_SLUG}
            sed -i "s|dorjecurreli/cobalto:v[0-9]\+\.[0-9]\+\.[0-9]\+|dorjecurreli/cobalto:${RELEASE_VERSION}|" docker-compose.production.yml
            cp docker-compose.production.yml docker-compose.yml
            cp .env.production .env
            docker compose down
            docker compose up -d



#TODO deploy stage
